{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activity.store.ts","app/stores/profile.store.ts","app/stores/user.store.ts","app/stores/store.ts","app/stores/common.store.ts","app/stores/modal.store.ts","app/stores/comment.store.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/ReTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingIndicator.tsx","app/common/form/ReTextArea.tsx","app/common/form/ReSelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/ReDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailChat.tsx","features/activities/details/ActivityDetailHeader.tsx","features/activities/details/ActivityDetailInfo.tsx","features/activities/details/ActivityDetailSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PaginationParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modelStateErrors","key","Object","prototype","call","flat","setServerError","getResponseBody","requests","url","get","then","body","post","put","delete","agent","Account","current","login","user","register","fbLogin","accessToken","Activities","list","params","details","id","create","activity","update","attend","Profiles","username","profile","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","Activity","init","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","bio","ProfileAboutFormValues","ActivityStore","activityRegistry","Map","selectedActivity","editMode","isLoading","isLoadingInitial","paginationParams","set","loadActivities","setLoadingInitial","axiosParams","setPagination","forEach","addActivityToRegistry","console","clearActivities","clear","setPaginationParams","setPredicate","value","resetPredicate","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","Date","state","createActivity","activityValues","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","URLSearchParams","toString","toISOString","ProfileStore","loadingProfile","uploadingPhoto","loading","deleting","followings","loadingFollowings","loadingActivities","activeTab","setActiveTab","activeTabNumIndex","Number","isNaN","loadProfile","updateProfile","activityStore","photo","photos","isMain","setImage","p","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","credentials","setToken","modalStore","closeModal","logout","localStorage","removeItem","getUser","getFacebookLoginStatus","window","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","finally","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","length","substring","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","ReTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingIndicator","Dimmer","ReTextArea","ReSelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","ReDateInput","selected","useHistory","useParams","setActivity","nullable","enableReinitialize","uuid","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","marginLeft","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","log","primary","NotFound","Inline","message","Modal","onClose","isCurrentUser","setEditMode","profileForm","setProfileForm","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","files","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","revokeObjectURL","Preview","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","CardGroup","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.22a52f08.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PaginationParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 3) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosResponse, AxiosError } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\n// import { toast } from \"react-toastify\";\nimport { Activity, UserActivity, ActivityFormValues } from \"../models/activity\";\nimport { PaginatedResult } from \"../models/pagination\";\nimport { Photo, Profile, ProfileAboutFormValues } from \"../models/profile\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") {\n      await sleep(1000);\n    }\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data === \"string\") {\n          toast.error(data);\n        }\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modelStateErrors = [];\n          for (const key in data.errors) {\n            if (Object.prototype.hasOwnProperty.call(data.errors, key)) {\n              modelStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modelStateErrors.flat();\n        }\n        break;\n      case 401:\n        toast.error(\"unauthorized\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n  }\n);\n\nconst getResponseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(getResponseBody),\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(getResponseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(getResponseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(getResponseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios.get<PaginatedResult<Activity[]>>(`/activities`, { params }).then(getResponseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => requests.post(`/activities`, activity),\n  update: (activity: ActivityFormValues) => requests.put(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) => requests.post<User>(\"/account/register\", user),\n  fbLogin: (accessToken: string) =>\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  update: (profile: ProfileAboutFormValues) => requests.put(`/profiles`, profile),\n  uploadPhoto: (file: Blob) => {\n    const formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}/`),\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\n};\n\nexport const agent = {\n  Account,\n  Activities,\n  Profiles,\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title = \"\";\n  category = \"\";\n  description = \"\";\n  date: Date | null = null;\n  city = \"\";\n  venue = \"\";\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.category;\n    }\n  }\n}\n","import { User } from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image: string;\n  bio: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image || \"\";\n    this.bio = user.bio || \"\";\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport class ProfileAboutFormValues {\n  displayName = \"\";\n  bio = \"\";\n\n  constructor(profile?: Profile) {\n    if (profile) {\n      this.displayName = profile.displayName;\n      this.bio = profile.bio || \"\";\n    }\n  }\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PaginationParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  // activities: Activity[] = [];\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  isLoading = false;\n  isLoadingInitial = false;\n  pagination: Pagination | null = null;\n  paginationParams = new PaginationParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.paginationParams = new PaginationParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a: Activity, b: Activity) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.setLoadingInitial(true);\n    try {\n      const response = await agent.Activities.list(this.axiosParams);\n      this.setPagination(response.pagination);\n      response.data.forEach((activity) => this.addActivityToRegistry(activity));\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.setLoadingInitial(false);\n    }\n  };\n\n  clearActivities = () => {\n    this.activityRegistry.clear();\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  setPaginationParams = (params: PaginationParams) => {\n    this.paginationParams = params;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") {\n          this.predicate.delete(key);\n        }\n      });\n    };\n\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n        break;\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.paginationParams.pageNumber.toString());\n    params.append(\"pageSize\", this.paginationParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.setLoadingInitial(true);\n      try {\n        activity = await agent.Activities.details(id);\n        this.addActivityToRegistry(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        return activity;\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private getActivity = (id: string) => {\n    const result = this.activityRegistry.get(id);\n    return result;\n  };\n\n  private addActivityToRegistry = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some((a) => a.username === user.username);\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find((a) => a.username === activity.hostUsername);\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  setLoadingInitial = (state: boolean): void => {\n    this.isLoadingInitial = state;\n  };\n\n  createActivity = async (activityValues: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activityValues);\n      const newActivity = new Activity(activityValues);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n\n      this.addActivityToRegistry(newActivity);\n\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          const updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          } as Activity;\n          this.activityRegistry.set(activity.id, updatedActivity);\n          this.selectedActivity = updatedActivity;\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.isLoading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.isLoading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\n            (a) => a.username !== user?.username\n          );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.isLoading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.isLoading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { UserActivity } from \"../models/activity\";\nimport { Photo, Profile, ProfileAboutFormValues } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploadingPhoto = false;\n  loading = false;\n  deleting = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activities: UserActivity[] = [];\n  loadingActivities = false;\n  activeTab = 0;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: number | string | undefined) => {\n    const activeTabNumIndex = Number(activeTab);\n    if (!isNaN(activeTabNumIndex)) {\n      this.activeTab = activeTabNumIndex;\n    }\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n      });\n      return profile;\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n\n  updateProfile = async (profile: ProfileAboutFormValues) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.update(profile);\n      runInAction(async () => {\n        this.profile = { ...this.profile, ...profile } as Profile;\n        store.userStore.user!.displayName = this.profile.displayName;\n        store.userStore.user!.bio = this.profile.bio;\n        await store.activityStore.loadActivities();\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploadingPhoto = true;\n    try {\n      const { data: photo } = await agent.Profiles.uploadPhoto(file);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.uploadingPhoto = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  deletePhoto = async (photo: Photo) => {\n    this.deleting = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos = this.profile.photos.filter((p) => p.id !== photo.id);\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.deleting = false));\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\n        }\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following ? profile.followersCount-- : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n      runInAction(() => (this.followings = followings));\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.loadingFollowings = false));\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate = \"future\") => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate);\n      runInAction(() => (this.activities = activities));\n    } catch (error) {\n      console.error(error);\n    } finally {\n      runInAction(() => (this.loadingActivities = false));\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n  fbAccessToken: string | null = null;\n  fbLoading = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  register = async (credentials: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(credentials);\n      store.commonStore.setToken(user.token);\n      runInAction(() => {\n        this.user = user;\n      });\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  login = async (credentials: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(credentials);\n      store.commonStore.setToken(user.token);\n      runInAction(() => {\n        this.user = user;\n      });\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n    store.activityStore.clearActivities();\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n\n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus((response) => {\n      if (response.status === \"connected\") {\n        this.fbAccessToken = response.authResponse.accessToken;\n      }\n    });\n  };\n\n  facebookLogin = () => {\n    this.fbLoading = true;\n\n    const apiLogin = (accessToken: string) => {\n      agent.Account.fbLogin(accessToken)\n        .then((user) => {\n          store.commonStore.setToken(user.token);\n          runInAction(() => {\n            this.user = user;\n          });\n          history.push(\"/activities\");\n        })\n        .catch((error) => {\n          console.error(error);\n        })\n        .finally(() => {\n          this.fbLoading = false;\n        });\n    };\n\n    if (this.fbAccessToken) {\n      apiLogin(this.fbAccessToken);\n    } else {\n      window.FB.login(\n        (response) => {\n          apiLogin(response.authResponse.accessToken);\n        },\n        { scope: \"public_profile,email\" }\n      );\n    }\n  };\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activity.store\";\nimport CommentStore from \"./comment.store\";\nimport CommonStore from \"./common.store\";\nimport ModalStore from \"./modal.store\";\nimport ProfileStore from \"./profile.store\";\nimport UserStore from \"./user.store\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n };\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) localStorage.setItem(\"jwt\", token);\n        else localStorage.removeItem(\"jwt\");\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import { ChatComment } from \"../models/comment\";\nimport { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(`${process.env.REACT_APP_CHAT_URL}?activityId=${activityId}`, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((error) => console.error(\"Error establishing the connection:\", error));\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\n          });\n          this.comments = comments;\n        });\n      });\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection?.stop().catch((error) => console.error(\"Error stopping connection:\", error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} exact to=\"/\" header>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} exact to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} exact to=\"/errors\" name=\"errors\" />\n        <Menu.Item>\n          <Button as={NavLink} exact to=\"/createActivity\" positive content=\"Create Activity\" />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image src={user?.image || \"/assets/user.png\"} avatar spaced=\"right\" />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Log Out\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 28 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\"></Header>\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date: Date) => setPredicate(\"startDate\", date)}\n        value={predicate.get(\"startDate\" || new Date())}\n      />\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { SyntheticEvent } from \"react\";\nimport { Reveal, Button } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button fluid color=\"teal\" content={profile.following ? \"Following\" : \"Not following\"} />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          loading={loading}\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\nexport default observer(function ProfileCard({ profile }: Props) {\n  return (\n    <Card>\n      <Image src={profile.image || \"assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>\n          {profile.bio?.length > 40 ? profile.bio?.substring(0, 40) + \"...\" : profile.bio}\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n              <Image\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n                bordered\n                style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\nexport function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      {activity.isCancelled && (\n        <Label attached=\"top\" color=\"red\" content=\"Canceled\" style={{ textAlign: \"center\" }} />\n      )}\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 5 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profiles/${activity.host?.username}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"calendar\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import { Fragment } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { ActivityListItem } from \"./ActivityListItem\";\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n});\n","import { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { PaginationParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPaginationParams, pagination } = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) {\n      loadActivities();\n    }\n  }, [activityRegistry.size, loadActivities]);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPaginationParams(new PaginationParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  // if (activityStore.isLoadingInitial && !loadingNext) {\n  //   return <LoadingIndicator content=\"Loading activities...\" />;\n  // }\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.isLoadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from \"formik\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  type?: \"text\" | \"email\" | \"password\";\n}\n\nexport default function ReTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\" style={{ marginTop: \"0.5em\" }}>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport ReTextInput from \"../../app/common/form/ReTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <ReTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\n          <ReTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport ReTextInput from \"../../app/common/form/ReTextInput\";\nimport { UserFormValues } from \"../../app/models/user\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n  interface RegisterFormValues extends UserFormValues {\n    error: string | null;\n  }\n\n  const initValues: RegisterFormValues = {\n    username: \"\",\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    error: null,\n  };\n\n  return (\n    <Formik\n      initialValues={initValues}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            as=\"h2\"\n            content=\"Sign up to Reactivities\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <ReTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <ReTextInput name=\"username\" placeholder=\"Username\" />\n          <ReTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\n          <ReTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Divider, Header, Image, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image size=\"massive\" src=\"/assets/logo.png\" alt=\"logo\" style={{ marginBottom: 12 }} />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to={\"/activities\"} size=\"huge\" inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\n              Login\n            </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\n              Register\n            </Button>\n            <Divider horizontal inverted>\n              OR\n            </Divider>\n            <Button\n              loading={userStore.fbLoading}\n              size=\"huge\"\n              inverted\n              color=\"facebook\"\n              content=\"Login with Facebook\"\n              onClick={userStore.facebookLogin}\n            />\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\nexport default function LoadingIndicator({\n  inverted = true,\n  content = \"Loading...\",\n}: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n}\n","import { useField } from \"formik\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function ReTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\" style={{ marginTop: \"0.5em\" }}>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from \"formik\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nexport default function ReSelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\" style={{ marginTop: \"0.5em\" }}>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" },\n];\n","import { useField } from \"formik\";\nimport ReactDatePicker, { ReactDatePickerProps } from \"react-datepicker\";\nimport { Form, Label } from \"semantic-ui-react\";\n\nexport default function ReDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <ReactDatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\" style={{ marginTop: \"0.5em\" }}>\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingIndicator from \"../../../app/layout/LoadingIndicator\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport ReTextInput from \"../../../app/common/form/ReTextInput\";\nimport ReTextArea from \"../../../app/common/form/ReTextArea\";\nimport ReSelectInput from \"../../../app/common/form/ReSelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport ReDateInput from \"../../../app/common/form/ReDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { updateActivity, createActivity, loadActivity, isLoadingInitial } = activityStore;\n\n  const { id } = useParams<{ id: string }>();\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required.\"),\n    description: Yup.string().required(\"The activity description is required.\"),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"The activity date is required\").nullable(),\n    city: Yup.string().required(),\n    venue: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n    } else {\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\n    }\n  }\n\n  if (isLoadingInitial) {\n    return <LoadingIndicator content={\"Loading activity...\"} />;\n  }\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={handleFormSubmit}\n      >\n        {({ handleSubmit, isValid, dirty, isSubmitting }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <ReTextInput name=\"title\" placeholder=\"Title\" />\n            <ReTextArea name=\"description\" rows={3} placeholder=\"Description\" />\n            <ReSelectInput options={categoryOptions} name=\"category\" placeholder=\"Category\" />\n            <ReDateInput\n              name=\"date\"\n              placeholderText=\"Date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n\n            <ReTextInput name=\"city\" placeholder=\"City\" />\n            <ReTextInput name=\"venue\" placeholder=\"Venue\" />\n\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n              loading={isSubmitting}\n            />\n            <Button\n              as={Link}\n              to={activity.id ? `/activities/${activity.id}` : `/activities`}\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{ border: \"none\" }}>\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, Shift+Enter for a new line\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\n\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, isLoading, cancelActivityToggle },\n  } = useStore();\n\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 100, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header size=\"huge\" content={activity.title} style={{ color: \"white\" }} />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by\n                  <strong style={{ marginLeft: \"0.5rem\" }}>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={activity.isCancelled ? \"Re-activate Activity\" : \"Cancel Activity\"}\n              onClick={cancelActivityToggle}\n              loading={isLoading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={isLoading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            loading={isLoading}\n            onClick={updateAttendance}\n            color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\n\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailSidebar({ activity: { attendees, host } }: Props) {\n  if (!attendees) return null;\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        3 People Going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label style={{ position: \"absolute\" }} color=\"orange\" ribbon=\"right\">\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingIndicator from \"../../../app/layout/LoadingIndicator\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailChat from \"./ActivityDetailChat\";\nimport ActivityDetailHeader from \"./ActivityDetailHeader\";\nimport ActivityDetailInfo from \"./ActivityDetailInfo\";\nimport ActivityDetailSidebar from \"./ActivityDetailSidebar\";\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    isLoadingInitial,\n    selectedActivity: activity,\n    loadActivity,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [clearSelectedActivity, id, loadActivity]);\n\n  if (isLoadingInitial || !activity) return <LoadingIndicator />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailHeader activity={activity} />\n        <ActivityDetailInfo activity={activity} />\n        <ActivityDetailChat activityId={activity.id} />\n      </Grid.Column>\n\n      <Grid.Column width={6}>\n        <ActivityDetailSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState([]);\n  function handleNotFound() {\n    axios.get(baseUrl + \"buggy/not-found\").catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios.get(baseUrl + \"buggy/bad-request\").catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios.get(baseUrl + \"buggy/server-error\").catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorized() {\n    axios.get(baseUrl + \"buggy/unauthorised\").catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button onClick={handleBadRequest} content=\"Bad Request\" basic primary />\n          <Button onClick={handleValidationError} content=\"Validation Error\" basic primary />\n          <Button onClick={handleServerError} content=\"Server Error\" basic primary />\n          <Button onClick={handleUnauthorized} content=\"Unauthorised\" basic primary />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors.length > 0 && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\n\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server Error\" />\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack Trace\" color=\"teal\" />\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import { Formik, Form } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { Header, Tab, Grid, Button } from \"semantic-ui-react\";\nimport { Profile, ProfileAboutFormValues } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { useParams } from \"react-router\";\nimport ReTextInput from \"../../app/common/form/ReTextInput\";\nimport ReTextArea from \"../../app/common/form/ReTextArea\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileAbout({ profile }: Props) {\n  const {\n    profileStore: { isCurrentUser, loadProfile, updateProfile },\n  } = useStore();\n  const { username } = useParams<{ username: string }>();\n  const [editMode, setEditMode] = useState(false);\n  const [profileForm, setProfileForm] = useState<ProfileAboutFormValues>(\n    new ProfileAboutFormValues(profile)\n  );\n\n  const validationSchema = Yup.object({\n    displayName: Yup.string().required(\"Display Name is required\"),\n  });\n\n  useEffect(() => {\n    if (username && username !== profile.username)\n      loadProfile(username).then((profile) => setProfileForm(new ProfileAboutFormValues(profile)));\n    setProfileForm(new ProfileAboutFormValues(profile));\n  }, [username, loadProfile, profile.username, profile]);\n\n  function handleFormSubmit(profile: ProfileAboutFormValues) {\n    updateProfile(profile).then(() => setEditMode(false));\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"About\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={editMode ? \"Cancel\" : \"Edit\"}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {editMode ? (\n            <Formik\n              initialValues={profileForm}\n              enableReinitialize\n              validationSchema={validationSchema}\n              onSubmit={handleFormSubmit}\n            >\n              {({ handleSubmit, isValid, dirty, isSubmitting }) => (\n                <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n                  <ReTextInput label=\"Display Name\" name=\"displayName\" placeholder=\"Display Name\" />\n                  <ReTextArea label=\"Bio\" name=\"bio\" placeholder=\"Bio\" rows={8} />\n                  <Button\n                    disabled={isSubmitting || !dirty || !isValid}\n                    floated=\"right\"\n                    positive\n                    type=\"submit\"\n                    content=\"Submit\"\n                    loading={isSubmitting}\n                  />\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            <p style={{ whiteSpace: \"pre-wrap\" }}>{profile.bio}</p>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => {\n              return <ProfileCard key={profile.username} profile={profile} />;\n            })}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({ imagePreview, setCropper }: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".image-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    ></Cropper>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      const files = acceptedFiles.map((file: any) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file),\n        })\n      );\n      setFiles(files);\n    },\n    [setFiles]\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActive } : { ...dzStyles }}>\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image here...\" />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<Array<any>>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.Preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Photo\" />\n        {files.length > 0 && (\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Photo\" />\n        {files.length > 0 && (\n          <>\n            <div className=\"image-preview\" style={{ minHeight: 200, overflow: \"hidden\" }}></div>\n            <Button.Group widths={2}>\n              <Button loading={loading} onClick={onCrop} positive icon=\"check\" />\n              <Button disabled={loading} onClick={() => setFiles([])} icon=\"close\" />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { SyntheticEvent, useState } from \"react\";\nimport { Card, Image, CardGroup, Header, Tab, Grid, Button } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploadingPhoto,\n      setMainPhoto,\n      loading,\n      deletePhoto,\n      deleting,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploadingPhoto} />\n          ) : (\n            <CardGroup itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url || \"/assets/user.png\"} />\n                  {isCurrentUser && photo && (\n                    <Button.Group>\n                      <Button\n                        basic\n                        loading={target === photo.id && loading}\n                        color=\"green\"\n                        content=\"Main\"\n                        name={photo.id}\n                        disabled={photo.isMain}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        loading={target === photo.id && deleting}\n                        color=\"red\"\n                        icon=\"trash\"\n                        name={photo.id}\n                        disabled={photo.isMain}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </CardGroup>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { useStore } from \"../../app/stores/store\";\nimport { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport { SyntheticEvent, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\n\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { profile, loadingActivities, loadUserActivities, activities } = profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {activities.map((activity) => (\n              <Card as={Link} to={`/activities/${activity.id}`} key={activity.id}>\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\nimport ProfileActivities from \"./ProfileActivities\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: \"About\", render: () => <ProfileAbout profile={profile} /> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size=\"small\" src={profile.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName}></Header>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingIndicator from \"../../app/layout/LoadingIndicator\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadProfile, profile, loadingProfile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  if (loadingProfile) {\n    return <LoadingIndicator content=\"Loading profile...\" />;\n  }\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && <ProfileHeader profile={profile} />}\n        {profile && <ProfileContent profile={profile} />}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />)}\n    />\n  );\n}\n","import { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport { useEffect } from \"react\";\nimport LoadingIndicator from \"./LoadingIndicator\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) {\n    return <LoadingIndicator content=\"Loading app...\" />;\n  }\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage}></Route>\n      <Route\n        exact\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute exact path=\"/activities/:id\" component={ActivityDetails} />\n                <PrivateRoute\n                  key={location.key}\n                  exact\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute exact path=\"/profiles/:username\" component={ProfilePage} />\n                <Route exact path=\"/errors\" component={TestErrors} />\n                <Route exact path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContext.Provider value={store}>\n      <Router history={history}>\n        <ScrollToTop />\n        <App />\n      </Router>\n    </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}